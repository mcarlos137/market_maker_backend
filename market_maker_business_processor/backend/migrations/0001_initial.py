# Generated by Django 4.1.7 on 2023-03-12 05:12

import backend.models.strategyAMM
import backend.models.strategyCEMM
import backend.models.strategyPMM
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('amount', models.CharField(max_length=100)),
                ('currency', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
        ),
        migrations.CreateModel(
            name='BotGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BotSprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('finished_at', models.DateTimeField(editable=False, null=True)),
                ('bot_name', models.CharField(max_length=50, null=True)),
                ('instance_id', models.CharField(max_length=50, null=True)),
                ('strategy_type', models.IntegerField(choices=[(1, 'Avellaneda Market Making'), (2, 'Cross Exchange Market Making'), (3, 'Pure Market Making')], default=3, verbose_name='Executing')),
                ('bot_group', models.ManyToManyField(blank=True, to='backend.botgroup')),
            ],
            options={
                'db_table': 'BOT_SPRINTS',
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hummingbot_connector', models.IntegerField(choices=[(1, 'Alt Markets'), (2, 'Ascend Ex'), (3, 'Ascend Ex Paper Trade'), (4, 'Binance'), (5, 'Binance Paper Trade'), (6, 'Binance Us'), (7, 'Bitfinex'), (8, 'Bitmart'), (9, 'Bittrex'), (10, 'Bybit'), (11, 'Bybit Testnet'), (12, 'Ciex'), (13, 'Coinbase Pro'), (14, 'Crypto Com'), (15, 'Gate Io'), (16, 'Gate Io Paper Trade'), (17, 'Hitbtc'), (18, 'Huobi'), (19, 'K2'), (20, 'Kraken'), (21, 'Kucoin'), (22, 'Kucoin Paper Trade'), (23, 'Kucoin Testnet'), (24, 'Lbank'), (25, 'Loopring'), (26, 'Mexc'), (27, 'Mock Paper Exchange'), (28, 'Ndax'), (29, 'Ndax Testnet'), (30, 'Okx'), (31, 'Probit'), (32, 'Probit Kr'), (33, 'Whitebit')], null=True)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'EXCHANGES',
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base', models.CharField(max_length=5, null=True)),
                ('quote', models.CharField(max_length=5, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'MARKETS',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Buy'), (2, 'Sell')], null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=16)),
                ('bot_sprint', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.botsprint')),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.exchange')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.market')),
            ],
        ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ask_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bid_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.exchange')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.market')),
            ],
        ),
        migrations.CreateModel(
            name='StrategyPMM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('version', models.IntegerField(default=1, editable=False)),
                ('bid_spread', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('ask_spread', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_spread', models.DecimalField(decimal_places=2, default=-100, max_digits=10)),
                ('order_refresh_time', models.FloatField(null=True)),
                ('max_order_age', models.FloatField(default=1800)),
                ('order_refresh_tolerance_pct', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[backend.models.strategyPMM.validate_order_amount_not_zero])),
                ('price_ceiling', models.DecimalField(decimal_places=2, default=-1, max_digits=10)),
                ('price_floor', models.DecimalField(decimal_places=2, default=-1, max_digits=10)),
                ('moving_price_band_enabled', models.BooleanField(default=False)),
                ('price_ceiling_pct', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('price_band_refresh_time', models.FloatField(default=86400)),
                ('ping_pong_enabled', models.BooleanField(default=False)),
                ('order_levels', models.IntegerField(default=1)),
                ('order_level_amount', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('order_level_spread', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('inventory_skew_enabled', models.BooleanField(default=False)),
                ('inventory_target_base_pct', models.DecimalField(decimal_places=8, default=50, max_digits=16)),
                ('inventory_range_multiplier', models.DecimalField(decimal_places=2, default=50, max_digits=10)),
                ('inventory_price', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('filled_order_delay', models.DecimalField(decimal_places=2, default=60, max_digits=10)),
                ('hanging_orders_enabled', models.BooleanField(default=False)),
                ('hanging_orders_cancel_pct', models.DecimalField(decimal_places=2, default=10, max_digits=10)),
                ('order_optimization_enabled', models.BooleanField(default=False)),
                ('ask_order_optimization_depth', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('bid_order_optimization_depth', models.DecimalField(decimal_places=8, default=0, max_digits=16)),
                ('price_source', models.IntegerField(choices=[(1, 'Current Market'), (2, 'External Market'), (3, 'Custom Api')], default=1)),
                ('price_type', models.IntegerField(choices=[(1, 'Mid Price'), (2, 'Last Price'), (3, 'Last Own Trade Price'), (4, 'Best Bid'), (5, 'Best Ask'), (6, 'Inventory Cost')], default=1)),
                ('price_source_custom_api', models.CharField(blank=True, max_length=100, null=True)),
                ('custom_api_update_interval', models.FloatField(default=5)),
                ('add_transaction_costs', models.BooleanField(default=False)),
                ('take_if_crossed', models.BooleanField(default=False)),
                ('order_override', models.BooleanField(null=True)),
                ('should_wait_order_cancel_confirmation', models.BooleanField(null=True)),
                ('bid_order_level_spreads', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ask_order_level_spreads', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bid_order_level_amounts', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('ask_order_level_amounts', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exchange', to='backend.exchange')),
                ('market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='market', to='backend.market')),
                ('price_source_exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='price_source_exchange', to='backend.exchange')),
                ('price_source_market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='price_source_market', to='backend.market')),
            ],
            options={
                'unique_together': {('version', 'name')},
            },
        ),
        migrations.CreateModel(
            name='StrategyCEMM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('version', models.IntegerField(default=1, editable=False)),
                ('min_profitability', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order_amount', models.DecimalField(decimal_places=8, default=0, max_digits=16, validators=[backend.models.strategyCEMM.validate_order_amount_not_zero])),
                ('adjust_order_enabled', models.BooleanField(default=True)),
                ('order_refresh_mode', models.IntegerField(choices=[(1, 'Active Order Refresh'), (2, 'Passive Order Refresh')], default=1)),
                ('cancel_order_threshold', models.DecimalField(decimal_places=2, default=5, max_digits=10)),
                ('limit_order_min_expiration', models.DecimalField(decimal_places=2, default=130, max_digits=10)),
                ('top_depth_tolerance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('anti_hysteresis_duration', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order_size_taker_volume_factor', models.DecimalField(decimal_places=2, default=25, max_digits=10)),
                ('order_size_taker_balance_factor', models.DecimalField(decimal_places=2, default=99.5, max_digits=10)),
                ('order_size_portfolio_ratio_limit', models.DecimalField(decimal_places=2, default=16.67, max_digits=10)),
                ('conversion_rate_mode', models.CharField(default='rate_oracle_conversion_rate', max_length=30)),
                ('taker_to_maker_base_conversion_rate', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('taker_to_maker_quote_conversion_rate', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('slippage_buffer', models.DecimalField(decimal_places=2, default=5, max_digits=10)),
                ('debug_price_shim', models.BooleanField(default=False)),
                ('gateway_transaction_cancel_interval', models.DecimalField(decimal_places=2, default=600, max_digits=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('maker_market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='maker_market', to='backend.exchange')),
                ('maker_market_trading_pair', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='maker_market_trading_pair', to='backend.market')),
                ('taker_market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taker_market', to='backend.exchange')),
                ('taker_market_trading_pair', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taker_market_trading_pair', to='backend.market')),
            ],
            options={
                'unique_together': {('version', 'name')},
            },
        ),
        migrations.CreateModel(
            name='StrategyAMM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('version', models.IntegerField(default=1, editable=False)),
                ('execution_timeframe', models.IntegerField(choices=[(1, 'Infinite'), (2, 'From Date To Date'), (3, 'Daily Between Times')], null=True)),
                ('start_time', models.DateField(blank=True, null=True)),
                ('end_time', models.DateField(blank=True, null=True)),
                ('order_amount', models.DecimalField(decimal_places=8, default=0, max_digits=16, null=True, validators=[backend.models.strategyAMM.validate_order_amount_not_zero])),
                ('order_optimization_enabled', models.BooleanField(default=True)),
                ('risk_factor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order_amount_shape_factor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('min_spread', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order_refresh_time', models.DecimalField(decimal_places=0, default=0, max_digits=8)),
                ('max_order_age', models.DecimalField(decimal_places=2, default=1800, max_digits=10)),
                ('order_refresh_tolerance_pct', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('filled_order_delay', models.DecimalField(decimal_places=2, default=60, max_digits=10)),
                ('inventory_target_base_pct', models.DecimalField(decimal_places=2, default=50, max_digits=10)),
                ('add_transaction_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('volatility_buffer_size', models.DecimalField(decimal_places=0, default=200, max_digits=8)),
                ('trading_intensity_buffer_size', models.DecimalField(decimal_places=0, default=200, max_digits=8)),
                ('order_level_mode', models.IntegerField(default=1)),
                ('level_distances', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order_override', models.JSONField(blank=True, null=True)),
                ('hanging_orders_mode', models.BooleanField(default=False)),
                ('should_wait_order_cancel_confirmation', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.exchange')),
                ('market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.market')),
            ],
            options={
                'unique_together': {('version', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('closed_at', models.DateTimeField(editable=False, null=True)),
                ('side', models.IntegerField(choices=[(1, 'Buy'), (2, 'Sell')], null=True)),
                ('status', models.IntegerField(choices=[(1, 'Created'), (2, 'Closed')], default=1)),
                ('type', models.IntegerField(choices=[(1, 'Limit')], default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=16)),
                ('bot_sprint', models.ForeignKey(db_column='bot_sprint_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.botsprint')),
                ('exchange', models.ForeignKey(db_column='exchange_id', on_delete=django.db.models.deletion.PROTECT, to='backend.exchange')),
                ('market', models.ForeignKey(db_column='market_id', on_delete=django.db.models.deletion.PROTECT, to='backend.market')),
            ],
            options={
                'db_table': 'ORDERS',
            },
        ),
        migrations.AddField(
            model_name='botsprint',
            name='exchange',
            field=models.ForeignKey(db_column='exchange_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.exchange'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='final_balances',
            field=models.ManyToManyField(blank=True, related_name='final_balances', to='backend.balance'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='final_tickers',
            field=models.ManyToManyField(blank=True, related_name='final_tickers', to='backend.ticker'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='initial_balances',
            field=models.ManyToManyField(blank=True, related_name='initial_balances', to='backend.balance'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='initial_tickers',
            field=models.ManyToManyField(blank=True, related_name='initial_tickers', to='backend.ticker'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='strategy_amm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.strategyamm', verbose_name='Avellaneda MM'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='strategy_cemm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.strategycemm', verbose_name='Cross Exchange MM'),
        ),
        migrations.AddField(
            model_name='botsprint',
            name='strategy_pmm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.strategypmm', verbose_name='Pure MM'),
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.IntegerField(choices=[(2, 'Started'), (3, 'Stopped')], default=3)),
                ('version', models.IntegerField(default=1, editable=False)),
                ('instance_id', models.CharField(max_length=50, null=True)),
                ('strategy_type', models.IntegerField(choices=[(1, 'Avellaneda Market Making'), (2, 'Cross Exchange Market Making'), (3, 'Pure Market Making')], default=3, verbose_name='Selected for execution')),
                ('strategy_amm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.strategyamm', verbose_name='Avellaneda MM')),
                ('strategy_cemm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.strategycemm', verbose_name='Cross Exchange MM')),
                ('strategy_pmm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backend.strategypmm', verbose_name='Pure MM')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='balance',
            name='exchange',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.exchange'),
        ),
        migrations.AddField(
            model_name='balance',
            name='market',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend.market'),
        ),
    ]
